CREATE IF NOT EXISTS DATABASE acamica;
USE acamica;
CREATE TABLE IF NOT EXISTS USUARIO (ID_USUARIO INT NOT NULL AUTO_INCREMENT, NOMBRES VARCHAR(100) NOT NULL, APELLIDOS VARCHAR(150) NOT NULL, EMAIL VARCHAR(200) NOT NULL UNIQUE, DIRECCION_ENVIO VARCHAR(250) NOT NULL, TELEFONO VARCHAR(50) NOT NULL, PASSWORD VARCHAR(300) NOT NULL, ADMIN BOOLEAN NOT NULL, TOKEN VARCHAR(1000), PRIMARY KEY (ID_USUARIO));
CREATE TABLE IF NOT EXISTS PRODUCTO (ID_PRODUCTO INT NOT NULL AUTO_INCREMENT, NOMBRE VARCHAR(250) NOT NULL UNIQUE, PRECIO FLOAT NOT NULL, PRIMARY KEY (ID_PRODUCTO), CONSTRAINT PRECIO_POSITIVO CHECK (PRECIO >=0));
CREATE TABLE IF NOT EXISTS FORMA_DE_PAGO (ID_FORMA_DE_PAGO INT NOT NULL AUTO_INCREMENT, METODO ENUM('EFECTIVO', 'TARJETACREDITO', 'TARJETADEBITO', 'CRYPTOMONEDA', 'CONSIGNACION', 'PSE'), PRIMARY KEY (ID_FORMA_DE_PAGO));
CREATE TABLE IF NOT EXISTS ESTADO_PEDIDOS (ID_ESTADO_PEDIDO INT NOT NULL AUTO_INCREMENT, ESTADO ENUM('NUEVO', 'CONFIRMADO', 'PREPARANDO', 'ENVIANDO', 'ENTREGADO', 'CANCELADO'), PRIMARY KEY (ID_ESTADO_PEDIDO));
CREATE TABLE IF NOT EXISTS FAVORITOS (ID_FAVORITO INT NOT NULL AUTO_INCREMENT, ID_FOREIGN_USUARIO INT NOT NULL, ID_FOREIGN_PRODUCTO INT NOT NULL, PRIMARY KEY (ID_FAVORITO), FOREIGN KEY (ID_FOREIGN_USUARIO) REFERENCES USUARIO (ID_USUARIO) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (ID_FOREIGN_PRODUCTO) REFERENCES PRODUCTO (ID_PRODUCTO) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE IF NOT EXISTS PEDIDOS (ID_PEDIDO INT NOT NULL AUTO_INCREMENT, ID_FOREIGN_ESTADO_PEDIDOS INT NOT NULL, ID_FOREIGN_FORMA_DE_PAGO INT NOT NULL, ID_FOREIGN_USUARIO INT NOT NULL, PRIMARY KEY (ID_PEDIDO), FOREIGN KEY (ID_FOREIGN_ESTADO_PEDIDOS) REFERENCES ESTADO_PEDIDOS (ID_ESTADO_PEDIDO) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (ID_FOREIGN_FORMA_DE_PAGO) REFERENCES FORMA_DE_PAGO (ID_FORMA_DE_PAGO) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (ID_FOREIGN_USUARIO) REFERENCES USUARIO (ID_USUARIO) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE IF NOT EXISTS HISTORIAL (ID_HISTORIAL INT NOT NULL AUTO_INCREMENT, ID_FOREIGN_PEDIDO INT NOT NULL, ID_FOREIGN_PRODUCTO INT NOT NULL, PRIMARY KEY (ID_HISTORIAL), FOREIGN KEY (ID_FOREIGN_PEDIDO) REFERENCES PEDIDOS (ID_PEDIDO) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (ID_FOREIGN_PRODUCTO) REFERENCES PRODUCTO (ID_PRODUCTO) ON DELETE CASCADE ON UPDATE CASCADE);
INSERT INTO USUARIO (NOMBRES, APELLIDOS, EMAIL, DIRECCION_ENVIO, TELEFONO, PASSWORD, ADMIN, TOKEN) VALUES ('DIEGO HERNANDO', 'OTALORA BARRERO', 'DIEGO@YOPMAIL.COM', 'CARRERA 1 # 3 - 4', '310123456', '$2b$10$VI88YTaod9G7U6vUUQ3u.eishuMoRLBWxEaY67CQIXAYRDzyq3MTO', TRUE, ''), ('DIANA MARIA', 'GUEVARA', 'DIANA@YOPMAIL.COM', 'EDIFICIO ESPERANZA APARTAMENTO 123', '1234567890', '$2b$10$AqRXqiJie/6JSNyR38WlneRzqsYmNwSZQ8B3AIIlRKP.douVk0FkC', TRUE, 'EL TOKEN DE JWT'), ('SANDRA KATALINA', 'PERAFAN TORES', 'SANDRAK@YOPMAIL.COM', 'CARRERA 1 # 1 - 12', '+57 1235496', '$2b$10$.XQubnASoLsrwb8OLT6Ae.IHu6d0kMumb6OvNLyaaNnHyiVNZLeM.', TRUE, ''), ('SOFIA', 'BUCARAMANGA', 'sofia@yopmail.com', 'carrera 4 # 25 torre 3 APARTAMENTO 5', '54654651321', '$2b$10$wMgg/.2.Sy6b.TZjpmSkuOz.1/iESf3yevQbTkLUncw5GrUeHqqqG', FALSE, ''), ('MIKA', 'Paula', 'mikapau@yopmail.com', '13 # 25 - 54', '98765432', '$2b$10$Yr0TeXYpqII3aW2ojLnZHeONnM6BlDXVgNlcW5uu6EzgK1VlGw0B.', FALSE, ''), ('Luna', 'Otalora', 'lunita@dulce.wau', 'perfeccion 100% perrita sexy y mimada', '3215641321541', '$2b$10$ORxQ6o5oqNkCOPjafoEAv.U6z2vvMJlI9w8zrC4ljWJPAxbZ/om26', TRUE, '');
INSERT INTO PRODUCTO (NOMBRE, PRECIO) VALUES ('HAMBURGUESA CLASICA', 30000), ('CERVEZA', 7000), ('ASADO', 25000), ('PICADA', 40000), ('ENSALADA', 8000), ('ESPAGUETI', 12000), ('GASEOSA', 5000);
INSERT INTO FORMA_DE_PAGO (METODO) VALUES ('EFECTIVO'), ('TARJETACREDITO'), ('TARJETADEBITO'), ('PSE'), ('CRYPTOMONEDA'), ('CONSIGNACION');
INSERT INTO ESTADO_PEDIDOS (ESTADO) VALUE ('NUEVO'), ('CONFIRMADO'), ('PREPARANDO'), ('ENVIANDO'), ('ENTREGADO'), ('CANCELADO');
INSERT INTO FAVORITOS (ID_FOREIGN_USUARIO, ID_FOREIGN_PRODUCTO) VALUES (1, 1), (1, 3), (1, 5), (4, 2), (4, 3), (2, 5);
INSERT INTO PEDIDOS (ID_FOREIGN_ESTADO_PEDIDOS, ID_FOREIGN_FORMA_DE_PAGO, ID_FOREIGN_USUARIO) VALUES (1, 1, 4), (1, 2, 4), (2, 2, 4), (1, 4, 4), (1, 1, 1), (2, 2, 2);
INSERT INTO HISTORIAL (ID_FOREIGN_PEDIDO, ID_FOREIGN_PRODUCTO) VALUES (1, 1), (1, 1), (1, 2), (1, 5), (2, 5), (3, 5), (3, 3), (3, 1), (4, 4), (4, 3), (4, 1), (5, 1), (6, 5), (6, 2);
